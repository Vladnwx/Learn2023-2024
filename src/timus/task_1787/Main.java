package timus.task_1787;

// JUDGE_ID 368360HH
/*
1787. Поворот на МЕГУ
Ограничение времени: 1.0 секунды
Ограничение памяти: 64 МБ
Светофор, установленный на повороте в торговый центр «МЕГА» с
Новомосковского тракта, работает в таком режиме, что за одну минуту повернуть
успевают k машин. По выходным, когда жители города едут закупаться продуктами и
одеждой, перед этим поворотом вырастает огромная пробка. Администрация торгового
центра дала указание повесить под строящимся неподалёку мостом камеру, подсчитывающую к
оличество автомобилей, подъезжающих к этому повороту со стороны города. По информации,
полученной с камеры за n минут, прошедших с начала наблюдений, определите количество машин,
стоящих в пробке в настоящий момент времени.
Исходные данные
В первой строке записаны целые числа k и n (1 ≤ k, n ≤ 100) — количество машин, успевающих
повернуть на «МЕГУ» в течение минуты, и количество минут, прошедших с начала наблюдений.
Во второй строке через пробел записаны целые числа a1, …, an (0 ≤ ai ≤ 100), где ai — количество машин,
 подъехавших к повороту со стороны города в течение i-й минуты. Можно считать, что наблюдения
 начинаются рано утром, когда машин, ожидающих на повороте, ещё нет.
Результат
Выведите количество машин, стоящих в пробке на повороте через n минут после начала наблюдений.
Примеры
исходные данные	                результат
5 3
6 7 2
                                    0
5 3
20 0 0
                                    5
 */

import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
public class Main {

    public static void main(String[] args) {

        int k,n,result = 0;

        String inputFileName = "src/timus/task_1787/input.txt";
        boolean oj = System.getProperty("ONLINE_JUDGE") != null;
        try{
            Scanner in  =
                    oj ? new Scanner(System.in) :
                            new Scanner(new FileReader(inputFileName));
            k = in.nextInt();
            n = in.nextInt();
           for (int i=0; i<n; i++)
           {
               result = result+in.nextInt()-k;
               if (result<0) result=0;
           }

            System.out.println(result);
        } catch (IOException exception){
            exception.printStackTrace();
        }
    }
}

import java.util.Scanner;

//JUDGE_ID 368360HH

//https://acm.timus.ru/problem.aspx?space=1&num=1293

/*
1293. Эния
Ограничение времени: 1.0 секунды
Ограничение памяти: 64 МБ
Неспокойно сейчас на стапелях шестого дока межгалактического порта планеты Торна. Всего через месяц закончится реконструкция малого броненесущего корвета «Эния». И снова этому боевому кораблю и его доблестной команде предстоят тяжёлые бои за контроль над плутониевыми рудниками Сибелиуса. Работа не прекращается ни на секунду, лазерные сварочные аппараты работают круглые сутки. От непрерывной работы плавятся шарниры роботов-ремонтников. Но задержаться нельзя ни на секунду.
И вот в этой суматохе обнаруживается, что термозащитные панели корвета вновь требуют срочной обработки сульфидом тория. Известно, что на обработку одного квадратного метра панели требуется 1 нанограмм сульфида. Всего необходимо обработать N прямоугольных панелей размером A на B метров. Вам необходимо как можно скорее подсчитать, сколько всего сульфида необходимо на обработку всех панелей «Энии». И не забудьте, что панели требуют обработки с обеих сторон.
Исходные данные
Единственная строка содержит целые числа N (1 ≤ N ≤ 100), A (1 ≤ A ≤ 100), B (1 ≤ B ≤ 100).
Результат
Выведите вес необходимого для обработки сульфида тория в нанограммах.
*/

public class task_1293 {
    public static void main(String[] args) throws InterruptedException {

        Scanner in = new Scanner(System.in);


        //int maxLenght = 256 * 1024 / 8;
        int maxLenght = 5;
        double[] nums = new double[maxLenght];

long l = 0L;
int i=0;
int j=0;
double d=0.0D;

      if (nums.length>0){
          while (i+j<maxLenght) {
            if (in.hasNext(" "))
            {

                j++;
                System.out.println(j);
            }

              if (in.hasNext()){
                in.next().trim();
              l = in.nextLong();
              d = Math.sqrt(l);
              nums[i] = d;
              i++;}
            else {j++;}
                                  }
          in.close();
          }


          while(i>0) {
              String s = String.format("%.4f",nums[i-1] );
              System.out.println(s);
              i--;
          }
      }
    }